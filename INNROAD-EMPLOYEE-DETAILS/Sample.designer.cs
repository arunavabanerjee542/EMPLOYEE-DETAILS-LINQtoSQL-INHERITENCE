#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace INNROAD_EMPLOYEE_DETAILS
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Sample")]
	public partial class SampleDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertInnroadEmployee(InnroadEmployee instance);
    partial void UpdateInnroadEmployee(InnroadEmployee instance);
    partial void DeleteInnroadEmployee(InnroadEmployee instance);
    #endregion
		
		public SampleDataContext() : 
				base(global::INNROAD_EMPLOYEE_DETAILS.Properties.Settings.Default.SampleConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public SampleDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SampleDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SampleDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SampleDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<InnroadEmployee> InnroadEmployees
		{
			get
			{
				return this.GetTable<InnroadEmployee>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.InnroadEmployee")]
	[global::System.Data.Linq.Mapping.InheritanceMappingAttribute(Code="Trainee", Type=typeof(Trainee))]
	[global::System.Data.Linq.Mapping.InheritanceMappingAttribute(Code="SenoirDeveloper", Type=typeof(SeniorDeveloper), IsDefault=true)]
	public partial class InnroadEmployee : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _EmployeeID;
		
		private string _FirstName;
		
		private string _LastName;
		
		private string _Email;
		
		private string _EmployeeType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEmployeeIDChanging(int value);
    partial void OnEmployeeIDChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnEmployeeTypeChanging(string value);
    partial void OnEmployeeTypeChanged();
    #endregion
		
		public InnroadEmployee()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int EmployeeID
		{
			get
			{
				return this._EmployeeID;
			}
			set
			{
				if ((this._EmployeeID != value))
				{
					this.OnEmployeeIDChanging(value);
					this.SendPropertyChanging();
					this._EmployeeID = value;
					this.SendPropertyChanged("EmployeeID");
					this.OnEmployeeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="VarChar(255)")]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="VarChar(255)")]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(255)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeType", DbType="VarChar(20)", IsDiscriminator=true)]
		public string EmployeeType
		{
			get
			{
				return this._EmployeeType;
			}
			set
			{
				if ((this._EmployeeType != value))
				{
					this.OnEmployeeTypeChanging(value);
					this.SendPropertyChanging();
					this._EmployeeType = value;
					this.SendPropertyChanged("EmployeeType");
					this.OnEmployeeTypeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	public partial class Trainee : InnroadEmployee
	{
		
		private System.Nullable<int> _HourlyPay;
		
		private System.Nullable<int> _WeeklyPay;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnHourlyPayChanging(System.Nullable<int> value);
    partial void OnHourlyPayChanged();
    partial void OnWeeklyPayChanging(System.Nullable<int> value);
    partial void OnWeeklyPayChanged();
    #endregion
		
		public Trainee()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HourlyPay", DbType="Int")]
		public System.Nullable<int> HourlyPay
		{
			get
			{
				return this._HourlyPay;
			}
			set
			{
				if ((this._HourlyPay != value))
				{
					this.OnHourlyPayChanging(value);
					this.SendPropertyChanging();
					this._HourlyPay = value;
					this.SendPropertyChanged("HourlyPay");
					this.OnHourlyPayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WeeklyPay", DbType="Int")]
		public System.Nullable<int> WeeklyPay
		{
			get
			{
				return this._WeeklyPay;
			}
			set
			{
				if ((this._WeeklyPay != value))
				{
					this.OnWeeklyPayChanging(value);
					this.SendPropertyChanging();
					this._WeeklyPay = value;
					this.SendPropertyChanged("WeeklyPay");
					this.OnWeeklyPayChanged();
				}
			}
		}
	}
	
	public partial class SeniorDeveloper : InnroadEmployee
	{
		
		private System.Nullable<int> _AnnualPay;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAnnualPayChanging(System.Nullable<int> value);
    partial void OnAnnualPayChanged();
    #endregion
		
		public SeniorDeveloper()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnnualPay", DbType="Int")]
		public System.Nullable<int> AnnualPay
		{
			get
			{
				return this._AnnualPay;
			}
			set
			{
				if ((this._AnnualPay != value))
				{
					this.OnAnnualPayChanging(value);
					this.SendPropertyChanging();
					this._AnnualPay = value;
					this.SendPropertyChanged("AnnualPay");
					this.OnAnnualPayChanged();
				}
			}
		}
	}
}
#pragma warning restore 1591
